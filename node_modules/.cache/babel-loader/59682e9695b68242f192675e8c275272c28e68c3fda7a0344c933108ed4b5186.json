{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nir42\\\\reactProjects\\\\savings-interest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport InputForm from './components/InputForm';\nimport ResultsTable from './components/ResultsTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n    // The below code calculates yearly results (total savings, interest etc)\n    setYearlyData([]);\n    let total;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings = currentSavings + yearlyInterest + yearlyContribution;\n      setYearlyData(prev => [{\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      }, ...prev]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {\n      yearlyData: yearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eGztFamgKhuQtAIUNxpNPZwe9wA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","InputForm","ResultsTable","useState","jsxDEV","_jsxDEV","App","_s","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","expectedReturn","duration","total","i","yearlyInterest","prev","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nir42/reactProjects/savings-interest/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport InputForm from './components/InputForm'\nimport ResultsTable from './components/ResultsTable'\nimport {useState} from 'react'\nfunction App() {\n  const [yearlyData,setYearlyData]=useState([]);\n  const calculateHandler = (userInput) => {\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n    // The below code calculates yearly results (total savings, interest etc)\n    setYearlyData([]);\n    let total \n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings = currentSavings + yearlyInterest + yearlyContribution;\n      setYearlyData(\n        (prev)=> [\n        {\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution,\n        },...prev]\n      );\n    }\n  };\n  return (\n    <div>\n      <Header/>\n      <InputForm calculateHandler={calculateHandler}/>\n      <ResultsTable yearlyData={yearlyData}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMO,gBAAgB,GAAIC,SAAS,IAAK;IACtC,IAAIC,cAAc,GAAG,CAACD,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAME,kBAAkB,GAAG,CAACF,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMG,cAAc,GAAG,CAACH,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMI,QAAQ,GAAG,CAACJ,SAAS,CAAC,UAAU,CAAC;IACvC;IACAF,aAAa,CAAC,EAAE,CAAC;IACjB,IAAIO,KAAK;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGN,cAAc,GAAGE,cAAc;MACtDF,cAAc,GAAGA,cAAc,GAAGM,cAAc,GAAGL,kBAAkB;MACrEJ,aAAa,CACVU,IAAI,IAAI,CACT;QACEC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAET,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,EAAC,GAAGM,IAAI,CACX,CAAC;IACH;EACF,CAAC;EACD,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTrB,OAAA,CAACJ,SAAS;MAACS,gBAAgB,EAAEA;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChDrB,OAAA,CAACH,YAAY;MAACM,UAAU,EAAEA;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}